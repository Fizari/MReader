<Window x:Class="MReader.Core.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:converters="clr-namespace:MReader.Core.Converters"
        xmlns:views="clr-namespace:MReader.Core.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="{Binding Title}" 
        Height="{Binding AppWindowHeight, Mode=TwoWay}" 
        Width="{Binding AppWindowWidth, Mode=TwoWay}">
    <Window.Resources>
        <!-- BRUSHED -->
        <SolidColorBrush x:Key="ThumbBrush" Color="#FF64B5DF" />
        <SolidColorBrush x:Key="ThumbBorderBrush" Color="#FF64B5DF" />
        <SolidColorBrush x:Key="WarningMessageColor" Color="#FFD7AA00" />
        <SolidColorBrush x:Key="ErrorMessageColor" Color="Red" />
        <!-- END BRUSHED -->

        <!-- STYLES -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2" BorderThickness="1" Width="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track Name="PART_Track" IsDirectionReversed="True">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Background="{StaticResource ThumbBrush}" BorderBrush="{StaticResource ThumbBorderBrush}" />
                </Track.Thumb>
            </Track>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Track Name="PART_Track" IsDirectionReversed="False">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Background="{StaticResource ThumbBrush}" BorderBrush="{StaticResource ThumbBorderBrush}" />
                </Track.Thumb>
            </Track>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                    <Setter Property="Opacity" Value="0.80"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="imageScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                            <ScrollBar Name="PART_VerticalScrollBar"  
                                       Grid.Column="1"
                                       Grid.Row="0"
                                       Margin="4,4,4,4"
                                       Value="{TemplateBinding VerticalOffset}" 
                                       Maximum="{TemplateBinding ScrollableHeight}" 
                                       ViewportSize="{TemplateBinding ViewportHeight}" 
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" 
                                       Orientation="Horizontal" 
                                       Grid.Row="1" 
                                       Grid.Column="0"
                                       Margin="4,4,4,4"
                                       Value="{TemplateBinding HorizontalOffset}" 
                                       Maximum="{TemplateBinding ScrollableWidth}" 
                                       ViewportSize="{TemplateBinding ViewportWidth}" 
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="logMessageCurrentTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline"/>
                </Trigger>
                <DataTrigger Binding="{Binding Type}" Value="Warning">
                    <Setter Property="Foreground" Value="{StaticResource WarningMessageColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="Error">
                    <Setter Property="Foreground" Value="{StaticResource ErrorMessageColor}"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation From="Red" To="Transparent" 
                                    Storyboard.TargetProperty="(Background).(Color)" 
                                    FillBehavior="Stop" 
                                    Duration="0:0:2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- END STYLES -->

        <converters:ImagePanelWidthConverter x:Key="IPWidthConverter" />
        <converters:MessageListBoxWidthConverter x:Key="MLWidthConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    </Window.Resources>

    <i:Interaction.Triggers >
        <i:EventTrigger EventName="PreviewKeyDown">
            <prism:InvokeCommandAction Command="{Binding WindowKeyDownCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <prism:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <prism:InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Canvas x:Name="mainCanvas">
        <DockPanel Width="{Binding ActualWidth, ElementName=mainCanvas}" Height="{Binding ActualHeight, ElementName=mainCanvas}" Background="#FF78E2E8">
            <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
                <ToolBar>
                    <Button Command="{Binding OpenFileDialogCommand}">Open</Button>
                    <Button Command="{Binding LockSplittersCommand}">Lock</Button>
                    <Button Command="{Binding SwitchModeCommand}">Mode</Button>
                    <Button Command="{Binding PressMeCommand}">Fullscreen</Button>
                    <Button Command="{Binding PressMeCommand}">Add message</Button>
                </ToolBar>
            </ToolBarTray>
            <StackPanel x:Name="footerBar" DockPanel.Dock="Bottom" Orientation="Horizontal" Background="#FFFAFAFA">
                <StackPanel Orientation="Horizontal">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding ToggleLoggingWindowCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel Orientation="Horizontal" DataContext="{Binding LogMessageCurrent}" >
                        <TextBlock 
                            Text="{Binding Message}" 
                            Style="{StaticResource logMessageCurrentTextBlockStyle}"
                            Cursor="Hand"
                            Padding="10,0,10,0"
                            Background="Transparent">
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Panel.ZIndex="-1" x:Name="mainGrid">

                <i:Interaction.Triggers >
                    <i:EventTrigger EventName="PreviewKeyDown">
                        <prism:InvokeCommandAction Command="{Binding GridKeyDownCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{Binding SplittersWidth}"/>
                    <ColumnDefinition MinWidth="{Binding ImagePanelMinWidth}" 
                                      Width="{Binding MainScrollViewerWidth}">
                        <ColumnDefinition.MaxWidth>
                            <MultiBinding Converter="{StaticResource IPWidthConverter}">
                                <Binding ElementName="mainGrid" Path="ActualWidth"/>
                                <Binding ElementName="splitter1" Path="ActualWidth"/>
                            </MultiBinding>
                        </ColumnDefinition.MaxWidth>
                    </ColumnDefinition>
                    <ColumnDefinition Width="{Binding SplittersWidth}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <GridSplitter x:Name="splitter1" Grid.Column="1" ResizeBehavior="PreviousAndNext" Width="{Binding SplittersWidth}" Margin="0" Background="White" IsEnabled="{Binding AreSplittersUnlocked}"/>
                <GridSplitter x:Name="splitter2" Grid.Column="3" ResizeBehavior="PreviousAndNext" Width="{Binding SplittersWidth}" Margin="0" Background="White" IsEnabled="{Binding AreSplittersUnlocked}"/>
                <StackPanel Grid.Column="4" Margin="0" Background="#FF484848"/>
                <StackPanel Grid.Column="0" Margin="0" Background="#FF484848"/>
                <!-- Image Panel -->
                <ScrollViewer 
                    x:Name="imageScrollViewer" 
                    Style="{StaticResource imageScrollViewerStyle}" 
                    Grid.Column="2" 
                    Margin="0" 
                    VerticalScrollBarVisibility="Auto">
                    <i:Interaction.Behaviors>
                        <views:ResetScrollPositionBehavior Enabled="True"/>
                    </i:Interaction.Behaviors>
                    <Image x:Name="mainImageControl" Source="{Binding ImageSource, Mode = OneWay, NotifyOnTargetUpdated=True}" Stretch="Uniform"></Image>
                </ScrollViewer>
            </Grid>
        </DockPanel>

        <!-- Logging Window -->
        <ListBox 
            ItemsSource="{Binding LogMessageList}"  Height="100" Canvas.Left="10"
            Width="{Binding Path=ActualWidth, ElementName=mainCanvas, Converter={StaticResource MLWidthConverter}}"
            Canvas.Bottom="{Binding ActualHeight, ElementName=footerBar}" 
            Visibility="{Binding Path=IsLoggingWindowVisible, Converter={StaticResource BoolToVisConverter} }"
            Margin="0,0,0,5">
            <i:Interaction.Behaviors>
                <views:AutoScrollDownBehavior Mode="Enabled"/>
            </i:Interaction.Behaviors>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Time, StringFormat=[{0:HH:mm:ss}] }" Foreground="Gray"/>
                        <TextBlock Text=" " />
                        <TextBlock x:Name="messageBody" Text="{Binding Message}" />
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Type}" Value="Warning">
                            <Setter TargetName="messageBody" Property="Foreground" Value="{StaticResource WarningMessageColor}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Type}" Value="Error">
                            <Setter TargetName="messageBody" Property="Foreground" Value="{StaticResource ErrorMessageColor}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Canvas>
</Window>
